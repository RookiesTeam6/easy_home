name: easy home

on:
  push:
    branches:
      - main
      - feat-docker

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. JDK 17 설치
      - name: JDK 17 버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. 유레카 서버 권한 설정 및 빌드
      - name: 유레카 서버 권한
        working-directory: ./eureka-server
        run: chmod +x ./gradlew

      - name: 유레카 서버 빌드 / 클린
        working-directory: ./eureka-server
        run: |
          ./gradlew clean bootJar -x test
          ls build/libs  # 빌드된 .jar 파일 확인

      # 4. API Gateway 권한 설정 및 빌드
      - name: API-Gateway 권한
        working-directory: ./api-gateway
        run: chmod +x ./gradlew

      - name: API Gateway 빌드 / 클린
        working-directory: ./api-gateway
        run: |
          ./gradlew clean build -x test
          ls build/libs  # 빌드된 .jar 파일 확인

      # 5. Docker 이미지 빌드 및 실행 (유레카 서버)
      - name: Eureka Server 도커 실행
        working-directory: ./eureka-server
        run: |
          docker build --build-arg SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} -t eureka-server .
          docker run -d --name eureka-server -p 8761:8761 --env SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} eureka-server
          docker ps -a  

      # 6. Docker 이미지 빌드 및 실행 (API Gateway)
      - name: API Gateway 도커 실행
        working-directory: ./api-gateway
        run: |
          docker build --build-arg SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} -t api-gateway .
          docker run -d --name api-gateway -p 8080:8080 --env SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} api-gateway
          docker ps -a
