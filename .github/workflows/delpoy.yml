name: easy home

on:
  push:
    branches:
      - main
      - feat-docker
      - feat-ec2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. JDK 17 설치
      - name: Install JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. 애플리케이션 빌드 (API Gateway)
      - name: Build API Gateway
        working-directory: ./api-gateway
        run: |
          chmod +x ./gradlew  # gradlew 실행 권한 부여
          ./gradlew clean build -x test
          ls build/libs  # 빌드된 .jar 파일 확인

      # 4. 애플리케이션 빌드 (Eureka Server)
      - name: Build Eureka Server
        working-directory: ./eureka-server
        run: |
          chmod +x ./gradlew  # gradlew 실행 권한 부여
          ./gradlew clean build -x test
          ls build/libs  # 빌드된 .jar 파일 확인

      # 5. 빌드된 .jar 파일 EC2에 업로드
      - name: Upload .jar file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: ./api-gateway/build/libs/api-gateway-0.0.1-SNAPSHOT.jar
          target: /home/ubuntu/server/demo/api-gateway.jar

      - name: Upload Eureka Server .jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: ./eureka-server/build/libs/eureka-server-0.0.1-SNAPSHOT.jar
          target: /home/ubuntu/server/demo/eureka-server.jar

      # 6. EC2에서 애플리케이션 실행
      - name: Deploy and Start Applications on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # EC2에서 기존 Java 프로세스 종료
            pkill -f 'java -jar' || true
            
            # API Gateway 및 Eureka Server 실행
            nohup java -jar /home/ubuntu/server/demo/api-gateway.jar -DJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} > /home/ubuntu/server/demo/api-gateway.log 2>&1 &
            nohup java -jar /home/ubuntu/server/demo/eureka-server.jar -DJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} > /home/ubuntu/server/demo/eureka-server.log 2>&1 &
            
            echo "Deployment Complete"
